#Request#C,off,A1,NORMAL1,0
#Request#C,off,A1,NORMAL2,0
#Request#C,off,A1,NORMAL3,0
#Request#C,on,X1,NORMAL,1
#Constraint#START,HA1209_ActiveState_3,t
#Constraint#EXPRESSION	->#left==	A.allocatedContent().activeState() == A1.NORMAL3	f
#Constraint#EXPRESSION	->	(A.allocatedContent().activeState() == A1.NORMAL3 -> XXX.isHidden())	t
#Constraint#END
#Constraint#START,HA1209_ActiveState_1,t
#Constraint#EXPRESSION	->#left==	A1.activeState() == A1.NORMAL1	f
#Constraint#EXPRESSION	->	(A1.activeState() == A1.NORMAL1 -> X.isHidden())	t
#Constraint#END
#Constraint#START,HA1209_ActiveState_2,t
#Constraint#EXPRESSION	->#left==	(pre)A1.activeState() == A1.NORMAL2	f
#Constraint#EXPRESSION	->	((pre)A1.activeState() == A1.NORMAL2 -> XX.isHidden())	t
#Constraint#END
#Constraint#START,HA1209_ActiveState_3,t
#Constraint#EXPRESSION	->#left==	A.allocatedContent().activeState() == A1.NORMAL3	f
#Constraint#EXPRESSION	->	(A.allocatedContent().activeState() == A1.NORMAL3 -> XXX.isHidden())	t
#Constraint#END
#CanceledRequest#A1,NORMAL1,f
#CanceledRequest#A1,NORMAL2,f
#CanceledRequest#A1,NORMAL3,f
#CanceledRequest#X1,NORMAL,f
#Result#A,A,
#Result#A,X,X1
#Result#A,XX,X1
#Result#A,XXX,X1
#Constraint#START,HA1209_ActiveState_1,t
#Constraint#EXPRESSION	->#left==	A1.activeState() == A1.NORMAL1	f
#Constraint#EXPRESSION	->	(A1.activeState() == A1.NORMAL1 -> X.isHidden())	t
#Constraint#END
#Constraint#START,HA1209_ActiveState_2,t
#Constraint#EXPRESSION	->#left==	(pre)A1.activeState() == A1.NORMAL2	f
#Constraint#EXPRESSION	->	((pre)A1.activeState() == A1.NORMAL2 -> XX.isHidden())	t
#Constraint#END
#Constraint#START,HA1209_ActiveState_3,t
#Constraint#EXPRESSION	->#left==	A.allocatedContent().activeState() == A1.NORMAL3	f
#Constraint#EXPRESSION	->	(A.allocatedContent().activeState() == A1.NORMAL3 -> XXX.isHidden())	t
#Constraint#END
#PrevResult#A,X,X1,NORMAL
#PrevResult#A,XX,X1,NORMAL
#PrevResult#A,XXX,X1,NORMAL
#Request#C,off,A1,NORMAL1,0
#Request#C,off,A1,NORMAL2,0
#Request#C,on,A1,NORMAL3,2
#Request#C,on,X1,NORMAL,1
#Constraint#START,HA1209_ActiveState_3,t
#Constraint#EXPRESSION	->#left==	A.allocatedContent().activeState() == A1.NORMAL3	t
#Constraint#EXPRESSION	->#right.isHidden()	XXX.isHidden()	skip
#Constraint#EXPRESSION	->	(A.allocatedContent().activeState() == A1.NORMAL3 -> XXX.isHidden())	skip
#Constraint#END
#Constraint#START,HA1209_ActiveState_1,t
#Constraint#EXPRESSION	->#left==	A1.activeState() == A1.NORMAL1	f
#Constraint#EXPRESSION	->	(A1.activeState() == A1.NORMAL1 -> X.isHidden())	t
#Constraint#END
#Constraint#START,HA1209_ActiveState_2,t
#Constraint#EXPRESSION	->#left==	(pre)A1.activeState() == A1.NORMAL2	f
#Constraint#EXPRESSION	->	((pre)A1.activeState() == A1.NORMAL2 -> XX.isHidden())	t
#Constraint#END
#Constraint#START,HA1209_ActiveState_3,t
#Constraint#EXPRESSION	->#left==	A.allocatedContent().activeState() == A1.NORMAL3	t
#Constraint#EXPRESSION	->#right.isHidden()	XXX.isHidden()	f
#Constraint#EXPRESSION	->	(A.allocatedContent().activeState() == A1.NORMAL3 -> XXX.isHidden())	f
#Constraint#END
#CanceledRequest#A1,NORMAL1,f
#CanceledRequest#A1,NORMAL2,f
#CanceledRequest#A1,NORMAL3,f
#CanceledRequest#X1,NORMAL,f
#Result#A,A,A1
#Result#A,X,X1
#Result#A,XX,X1
#Result#A,XXX,
#Constraint#START,HA1209_ActiveState_1,t
#Constraint#EXPRESSION	->#left==	A1.activeState() == A1.NORMAL1	f
#Constraint#EXPRESSION	->	(A1.activeState() == A1.NORMAL1 -> X.isHidden())	t
#Constraint#END
#Constraint#START,HA1209_ActiveState_2,t
#Constraint#EXPRESSION	->#left==	(pre)A1.activeState() == A1.NORMAL2	f
#Constraint#EXPRESSION	->	((pre)A1.activeState() == A1.NORMAL2 -> XX.isHidden())	t
#Constraint#END
#Constraint#START,HA1209_ActiveState_3,t
#Constraint#EXPRESSION	->#left==	A.allocatedContent().activeState() == A1.NORMAL3	t
#Constraint#EXPRESSION	->#right.isHidden()	XXX.isHidden()	t
#Constraint#EXPRESSION	->	(A.allocatedContent().activeState() == A1.NORMAL3 -> XXX.isHidden())	t
#Constraint#END
----Request Information----
Allocatable Count:4
  Area[A] policy[DEFAULT] visibility[10]
  Area[X] policy[DEFAULT] visibility[10]
  Area[XX] policy[DEFAULT] visibility[10]
  Area[XXX] policy[DEFAULT] visibility[10]
ContentState Count:4
  ViewContent[A1::NORMAL1] priority[10] isActive[false] order[0]
  ViewContent[A1::NORMAL2] priority[11] isActive[false] order[0]
  ViewContent[A1::NORMAL3] priority[12] isActive[false] order[0]
  ViewContent[X1::NORMAL] priority[10] isActive[true] order[1]
Scene Count:0
Constraint Count:3
  Constraint[HA1209_ActiveState_1] Expression[(A1.activeState() == A1.NORMAL1 -> X.isHidden())] runtime[true]
  Constraint[HA1209_ActiveState_2] Expression[((pre)A1.activeState() == A1.NORMAL2 -> XX.isHidden())] runtime[true]
  Constraint[HA1209_ActiveState_3] Expression[(A.allocatedContent().activeState() == A1.NORMAL3 -> XXX.isHidden())] runtime[true]
----Request Information----
Allocatable Count:4
  Area[A] policy[DEFAULT] visibility[10]
  Area[X] policy[DEFAULT] visibility[10]
  Area[XX] policy[DEFAULT] visibility[10]
  Area[XXX] policy[DEFAULT] visibility[10]
ContentState Count:4
  ViewContent[A1::NORMAL1] priority[10] isActive[false] order[0]
  ViewContent[A1::NORMAL2] priority[11] isActive[false] order[0]
  ViewContent[A1::NORMAL3] priority[12] isActive[true] order[2]
  ViewContent[X1::NORMAL] priority[10] isActive[true] order[1]
Scene Count:0
Constraint Count:3
  Constraint[HA1209_ActiveState_1] Expression[(A1.activeState() == A1.NORMAL1 -> X.isHidden())] runtime[true]
  Constraint[HA1209_ActiveState_2] Expression[((pre)A1.activeState() == A1.NORMAL2 -> XX.isHidden())] runtime[true]
  Constraint[HA1209_ActiveState_3] Expression[(A.allocatedContent().activeState() == A1.NORMAL3 -> XXX.isHidden())] runtime[true]
----Previous Result Information----
Allocatable TotalCount:4
  Area[A] Content[null] hidden[false]
  Area[X] Content[null] hidden[false]
  Area[XX] Content[null] hidden[false]
  Area[XXX] Content[null] hidden[false]
Content TotalCount:2
  ViewContent[A1] visible[false] active[false]
  ViewContent[X1] visible[false] active[false]
----Previous Result Information----
Allocatable TotalCount:4
  Area[A] Content[null] hidden[false]
  Area[X] Content[X1::NORMAL] hidden[false]
  Area[XX] Content[X1::NORMAL] hidden[false]
  Area[XXX] Content[X1::NORMAL] hidden[false]
Content TotalCount:2
  ViewContent[A1] visible[false] active[false]
  ViewContent[X1] visible[true] active[true]
    allocated Area[X]
    allocated Area[XX]
    allocated Area[XXX]
----Arbitrate----
Area[A] check start
  Content[A1] is not Active skip
  Content[null] check online constraints start
    constraint expression[(A.allocatedContent().activeState() == A1.NORMAL3 -> XXX.isHidden())] check start
      Allocatable[A] has no Allocated Content
      A.allocatedContent().activeState() no Content
      [A.allocatedContent().activeState() == A1.NORMAL3] false
      [(A.allocatedContent().activeState() == A1.NORMAL3 -> XXX.isHidden())] true
    constraint expression[(A.allocatedContent().activeState() == A1.NORMAL3 -> XXX.isHidden())] true

  check online constraints to confirm area hidden state
Area[A] displays Content[null] hidden[false]

Area[X] check start
  Content[X1::NORMAL] check online constraints start
  check online constraints to confirm area hidden state
    constraint expression[(A1.activeState() == A1.NORMAL1 -> X.isHidden())] check start
      A1.activeState() has no Active State
      [A1.activeState() == A1.NORMAL1] false
      [(A1.activeState() == A1.NORMAL1 -> X.isHidden())] true
    constraint expression[(A1.activeState() == A1.NORMAL1 -> X.isHidden())] true

Area[X] displays Content[X1::NORMAL] hidden[false]

Area[XX] check start
  Content[X1::NORMAL] check online constraints start
  check online constraints to confirm area hidden state
    constraint expression[((pre)A1.activeState() == A1.NORMAL2 -> XX.isHidden())] check start
      (pre)A1.activeState() has no Active State
      [(pre)A1.activeState() == A1.NORMAL2] false
      [((pre)A1.activeState() == A1.NORMAL2 -> XX.isHidden())] true
    constraint expression[((pre)A1.activeState() == A1.NORMAL2 -> XX.isHidden())] true

Area[XX] displays Content[X1::NORMAL] hidden[false]

Area[XXX] check start
  Content[X1::NORMAL] check online constraints start
  check online constraints to confirm area hidden state
    constraint expression[(A.allocatedContent().activeState() == A1.NORMAL3 -> XXX.isHidden())] check start
      Allocatable[A] has no Allocated Content
      A.allocatedContent().activeState() no Content
      [A.allocatedContent().activeState() == A1.NORMAL3] false
      [(A.allocatedContent().activeState() == A1.NORMAL3 -> XXX.isHidden())] true
    constraint expression[(A.allocatedContent().activeState() == A1.NORMAL3 -> XXX.isHidden())] true

Area[XXX] displays Content[X1::NORMAL] hidden[false]

----Arbitrate----
Area[A] check start
  Content[A1::NORMAL3] check online constraints start
    constraint expression[(A.allocatedContent().activeState() == A1.NORMAL3 -> XXX.isHidden())] check start
      Allocatable[A] has Allocated Content[A1]
      A.allocatedContent().activeState() is NORMAL3
      [A.allocatedContent().activeState() == A1.NORMAL3] true
      [XXX.isHidden()] before arbitrate skip
      [(A.allocatedContent().activeState() == A1.NORMAL3 -> XXX.isHidden())] before arbitrate skip
    constraint expression[(A.allocatedContent().activeState() == A1.NORMAL3 -> XXX.isHidden())] before arbitrate skip

  check online constraints to confirm area hidden state
Area[A] displays Content[A1::NORMAL3] hidden[false]

Area[X] check start
  Content[X1::NORMAL] check online constraints start
  check online constraints to confirm area hidden state
    constraint expression[(A1.activeState() == A1.NORMAL1 -> X.isHidden())] check start
      A1.activeState() is NORMAL3
      [A1.activeState() == A1.NORMAL1] false
      [(A1.activeState() == A1.NORMAL1 -> X.isHidden())] true
    constraint expression[(A1.activeState() == A1.NORMAL1 -> X.isHidden())] true

Area[X] displays Content[X1::NORMAL] hidden[false]

Area[XX] check start
  Content[X1::NORMAL] check online constraints start
  check online constraints to confirm area hidden state
    constraint expression[((pre)A1.activeState() == A1.NORMAL2 -> XX.isHidden())] check start
      (pre)A1.activeState() has no Active State
      [(pre)A1.activeState() == A1.NORMAL2] false
      [((pre)A1.activeState() == A1.NORMAL2 -> XX.isHidden())] true
    constraint expression[((pre)A1.activeState() == A1.NORMAL2 -> XX.isHidden())] true

Area[XX] displays Content[X1::NORMAL] hidden[false]

Area[XXX] check start
  Content[X1::NORMAL] check online constraints start
  check online constraints to confirm area hidden state
    constraint expression[(A.allocatedContent().activeState() == A1.NORMAL3 -> XXX.isHidden())] check start
      Allocatable[A] has Allocated Content[A1]
      A.allocatedContent().activeState() is NORMAL3
      [A.allocatedContent().activeState() == A1.NORMAL3] true
      [XXX.isHidden()] false
      [(A.allocatedContent().activeState() == A1.NORMAL3 -> XXX.isHidden())] false
    constraint expression[(A.allocatedContent().activeState() == A1.NORMAL3 -> XXX.isHidden())] false

Area[XXX] change hidden
Area[XXX] displays Content[X1::NORMAL] hidden[true]

----Cancel Request----
Content[A1::NORMAL1] check start
  Content[A1::NORMAL1] is not Active skip
Content[A1::NORMAL2] check start
  Content[A1::NORMAL2] is not Active skip
Content[A1::NORMAL3] check start
  Content[A1::NORMAL3] is not Active skip
Content[X1::NORMAL] check start
  Content[X1::NORMAL] is Visible skip
----Cancel Request----
Content[A1::NORMAL1] check start
  Content[A1::NORMAL1] is not Active skip
Content[A1::NORMAL2] check start
  Content[A1::NORMAL2] is not Active skip
Content[A1::NORMAL3] check start
  Content[A1::NORMAL3] is Visible skip
Content[X1::NORMAL] check start
  Content[X1::NORMAL] is Visible skip
----Check All Constraint----
    constraint expression[(A1.activeState() == A1.NORMAL1 -> X.isHidden())] check start
      A1.activeState() has no Active State
      [A1.activeState() == A1.NORMAL1] false
      [(A1.activeState() == A1.NORMAL1 -> X.isHidden())] true
    constraint expression[(A1.activeState() == A1.NORMAL1 -> X.isHidden())] true

    constraint expression[((pre)A1.activeState() == A1.NORMAL2 -> XX.isHidden())] check start
      (pre)A1.activeState() has no Active State
      [(pre)A1.activeState() == A1.NORMAL2] false
      [((pre)A1.activeState() == A1.NORMAL2 -> XX.isHidden())] true
    constraint expression[((pre)A1.activeState() == A1.NORMAL2 -> XX.isHidden())] true

    constraint expression[(A.allocatedContent().activeState() == A1.NORMAL3 -> XXX.isHidden())] check start
      Allocatable[A] has no Allocated Content
      A.allocatedContent().activeState() no Content
      [A.allocatedContent().activeState() == A1.NORMAL3] false
      [(A.allocatedContent().activeState() == A1.NORMAL3 -> XXX.isHidden())] true
    constraint expression[(A.allocatedContent().activeState() == A1.NORMAL3 -> XXX.isHidden())] true

----Check All Constraint----
    constraint expression[(A1.activeState() == A1.NORMAL1 -> X.isHidden())] check start
      A1.activeState() is NORMAL3
      [A1.activeState() == A1.NORMAL1] false
      [(A1.activeState() == A1.NORMAL1 -> X.isHidden())] true
    constraint expression[(A1.activeState() == A1.NORMAL1 -> X.isHidden())] true

    constraint expression[((pre)A1.activeState() == A1.NORMAL2 -> XX.isHidden())] check start
      (pre)A1.activeState() has no Active State
      [(pre)A1.activeState() == A1.NORMAL2] false
      [((pre)A1.activeState() == A1.NORMAL2 -> XX.isHidden())] true
    constraint expression[((pre)A1.activeState() == A1.NORMAL2 -> XX.isHidden())] true

    constraint expression[(A.allocatedContent().activeState() == A1.NORMAL3 -> XXX.isHidden())] check start
      Allocatable[A] has Allocated Content[A1]
      A.allocatedContent().activeState() is NORMAL3
      [A.allocatedContent().activeState() == A1.NORMAL3] true
      [XXX.isHidden()] true
      [(A.allocatedContent().activeState() == A1.NORMAL3 -> XXX.isHidden())] true
    constraint expression[(A.allocatedContent().activeState() == A1.NORMAL3 -> XXX.isHidden())] true

----Result Information----
Allocatable TotalCount:4
  Area[A] Content[null] hidden[false]
  Area[X] Content[X1::NORMAL] hidden[false]
  Area[XX] Content[X1::NORMAL] hidden[false]
  Area[XXX] Content[X1::NORMAL] hidden[false]
Content TotalCount:2
  ViewContent[A1] visible[false] cancel[false]
  ViewContent[X1] visible[true] cancel[false]
    allocated Area[X]
    allocated Area[XX]
    allocated Area[XXX]
----Result Information----
Allocatable TotalCount:4
  Area[A] Content[A1::NORMAL3] hidden[false]
  Area[X] Content[X1::NORMAL] hidden[false]
  Area[XX] Content[X1::NORMAL] hidden[false]
  Area[XXX] Content[X1::NORMAL] hidden[true]
Content TotalCount:2
  ViewContent[A1] visible[true] cancel[false]
    allocated Area[A]
  ViewContent[X1] visible[true] cancel[false]
    allocated Area[X]
    allocated Area[XX]
    allocated Area[XXX]

