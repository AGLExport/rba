#Request#C,off,A1,NORMAL,0
#Request#C,off,X1,NORMAL,0
#Request#C,on,Y1,NORMAL,1
#Constraint#START,HA2066_Displayed1,t
#Constraint#EXPRESSION	->#left.isActive()	X1.isActive()	f
#Constraint#EXPRESSION	->	(X1.isActive() -> X.isHidden())	t
#Constraint#END
#Constraint#START,HA2066_Displayed2,t
#Constraint#EXPRESSION	->#left.hasBeenDisplayed()	X1.hasBeenDisplayed()	f
#Constraint#EXPRESSION	->	(X1.hasBeenDisplayed() -> Y.isHidden())	t
#Constraint#END
#CanceledRequest#A1,NORMAL,f
#CanceledRequest#X1,NORMAL,f
#CanceledRequest#Y1,NORMAL,f
#Result#A,A,,f
#Result#A,X,,f
#Result#A,Y,Y1,f
#Constraint#START,HA2066_Displayed1,t
#Constraint#EXPRESSION	->#left.isActive()	X1.isActive()	f
#Constraint#EXPRESSION	->	(X1.isActive() -> X.isHidden())	t
#Constraint#END
#Constraint#START,HA2066_Displayed2,t
#Constraint#EXPRESSION	->#left.hasBeenDisplayed()	X1.hasBeenDisplayed()	f
#Constraint#EXPRESSION	->	(X1.hasBeenDisplayed() -> Y.isHidden())	t
#Constraint#END
#PrevResult#A,Y,Y1,NORMAL
#Request#C,off,A1,NORMAL,0
#Request#C,on,X1,NORMAL,2
#Request#C,on,Y1,NORMAL,1
#Constraint#START,HA2066_Displayed1,t
#Constraint#EXPRESSION	->#left.isActive()	X1.isActive()	t
#Constraint#EXPRESSION	->#right.isHidden()	X.isHidden()	f
#Constraint#EXPRESSION	->	(X1.isActive() -> X.isHidden())	f
#Constraint#END
#Constraint#START,HA2066_Displayed2,t
#Constraint#EXPRESSION	->#left.hasBeenDisplayed()	X1.hasBeenDisplayed()	f
#Constraint#EXPRESSION	->	(X1.hasBeenDisplayed() -> Y.isHidden())	t
#Constraint#END
#CanceledRequest#A1,NORMAL,f
#CanceledRequest#X1,NORMAL,f
#CanceledRequest#Y1,NORMAL,f
#Result#A,A,,f
#Result#A,X,,t
#Result#A,Y,Y1,f
#Constraint#START,HA2066_Displayed1,t
#Constraint#EXPRESSION	->#left.isActive()	X1.isActive()	t
#Constraint#EXPRESSION	->#right.isHidden()	X.isHidden()	t
#Constraint#EXPRESSION	->	(X1.isActive() -> X.isHidden())	t
#Constraint#END
#Constraint#START,HA2066_Displayed2,t
#Constraint#EXPRESSION	->#left.hasBeenDisplayed()	X1.hasBeenDisplayed()	f
#Constraint#EXPRESSION	->	(X1.hasBeenDisplayed() -> Y.isHidden())	t
#Constraint#END
#PrevResult#A,Y,Y1,NORMAL
#Request#C,off,A1,NORMAL,0
#Request#C,on,X1,NORMAL,2
#Request#C,on,Y1,NORMAL,1
#CanceledRequest#A1,NORMAL,f
#CanceledRequest#X1,NORMAL,f
#CanceledRequest#Y1,NORMAL,f
#Result#A,A,,f
#Result#A,X,,t
#Result#A,Y,Y1,f
#Constraint#START,HA2066_Displayed1,t
#Constraint#EXPRESSION	->#left.isActive()	X1.isActive()	t
#Constraint#EXPRESSION	->#right.isHidden()	X.isHidden()	t
#Constraint#EXPRESSION	->	(X1.isActive() -> X.isHidden())	t
#Constraint#END
#Constraint#START,HA2066_Displayed2,t
#Constraint#EXPRESSION	->#left.hasBeenDisplayed()	X1.hasBeenDisplayed()	f
#Constraint#EXPRESSION	->	(X1.hasBeenDisplayed() -> Y.isHidden())	t
#Constraint#END
----All Constraints check result----
Total Result:true
online  constraint[HA2066_Displayed1] result[true]
online  constraint[HA2066_Displayed2] result[true]

----All Constraints check result----
Total Result:true
online  constraint[HA2066_Displayed1] result[true]
online  constraint[HA2066_Displayed2] result[true]

----All Constraints check result----
Total Result:true
online  constraint[HA2066_Displayed1] result[true]
online  constraint[HA2066_Displayed2] result[true]

----Request Information----
Allocatable Count:3
  Area[A] policy[DEFAULT] visibility[10]
  Area[X] policy[DEFAULT] visibility[10]
  Area[Y] policy[DEFAULT] visibility[10]
ContentState Count:3
  ViewContent[A1::NORMAL] priority[10] isActive[false] order[0]
  ViewContent[X1::NORMAL] priority[10] isActive[false] order[0]
  ViewContent[Y1::NORMAL] priority[10] isActive[true] order[1]
Scene Count:0
Constraint Count:2
  Constraint[HA2066_Displayed1] Expression[(X1.isActive() -> X.isHidden())] runtime[true]
  Constraint[HA2066_Displayed2] Expression[(X1.hasBeenDisplayed() -> Y.isHidden())] runtime[true]
PostConstraint Count:0
----Request Information----
Allocatable Count:3
  Area[A] policy[DEFAULT] visibility[10]
  Area[X] policy[DEFAULT] visibility[10]
  Area[Y] policy[DEFAULT] visibility[10]
ContentState Count:3
  ViewContent[A1::NORMAL] priority[10] isActive[false] order[0]
  ViewContent[X1::NORMAL] priority[10] isActive[true] order[2]
  ViewContent[Y1::NORMAL] priority[10] isActive[true] order[1]
Scene Count:0
Constraint Count:2
  Constraint[HA2066_Displayed1] Expression[(X1.isActive() -> X.isHidden())] runtime[true]
  Constraint[HA2066_Displayed2] Expression[(X1.hasBeenDisplayed() -> Y.isHidden())] runtime[true]
PostConstraint Count:0
----Request Information----
Allocatable Count:3
  Area[A] policy[DEFAULT] visibility[10]
  Area[X] policy[DEFAULT] visibility[10]
  Area[Y] policy[DEFAULT] visibility[10]
ContentState Count:3
  ViewContent[A1::NORMAL] priority[10] isActive[false] order[0]
  ViewContent[X1::NORMAL] priority[10] isActive[true] order[2]
  ViewContent[Y1::NORMAL] priority[10] isActive[true] order[1]
Scene Count:0
Constraint Count:2
  Constraint[HA2066_Displayed1] Expression[(X1.isActive() -> X.isHidden())] runtime[true]
  Constraint[HA2066_Displayed2] Expression[(X1.hasBeenDisplayed() -> Y.isHidden())] runtime[true]
PostConstraint Count:0
----Previous Result Information----
Allocatable TotalCount:3
  Area[A] Content[null] hidden[false]
  Area[X] Content[null] hidden[false]
  Area[Y] Content[null] hidden[false]
Content TotalCount:3
  ViewContent[A1] visible[false] active[false]
  ViewContent[X1] visible[false] active[false]
  ViewContent[Y1] visible[false] active[false]
----Previous Result Information----
Allocatable TotalCount:3
  Area[A] Content[null] hidden[false]
  Area[X] Content[null] hidden[false]
  Area[Y] Content[Y1::NORMAL] hidden[false]
Content TotalCount:3
  ViewContent[A1] visible[false] active[false]
  ViewContent[X1] visible[false] active[false]
  ViewContent[Y1] visible[true] active[true]
    allocated Area[Y]
----Previous Result Information----
Allocatable TotalCount:3
  Area[A] Content[null] hidden[false]
  Area[X] Content[X1::NORMAL] hidden[true]
  Area[Y] Content[Y1::NORMAL] hidden[false]
Content TotalCount:3
  ViewContent[A1] visible[false] active[false]
  ViewContent[X1] visible[false] active[true]
    allocated Area[X]
  ViewContent[Y1] visible[true] active[true]
    allocated Area[Y]
----Arbitrate----
Area[A] check start
  Content[A1] is not Active skip
  Content[null] check online constraints start
  check online constraints to confirm area hidden state
Area[A] displays Content[null] hidden[false]

Area[X] check start
  Content[X1] is not Active skip
  Content[null] check online constraints start
  check online constraints to confirm area hidden state
    constraint expression[(X1.isActive() -> X.isHidden())] check start
      Content[X1] is not Active
      [(X1.isActive() -> X.isHidden())] true
    constraint expression[(X1.isActive() -> X.isHidden())] true

Area[X] displays Content[null] hidden[false]

Area[Y] check start
  Content[Y1::NORMAL] check online constraints start
  check online constraints to confirm area hidden state
    constraint expression[(X1.hasBeenDisplayed() -> Y.isHidden())] check start
      Content[X1].hasBeenDisplayed() false
      [(X1.hasBeenDisplayed() -> Y.isHidden())] true
    constraint expression[(X1.hasBeenDisplayed() -> Y.isHidden())] true

Area[Y] displays Content[Y1::NORMAL] hidden[false]

----Arbitrate----
Area[X] check start
  Content[X1::NORMAL] check online constraints start
  check online constraints to confirm area hidden state
    constraint expression[(X1.isActive() -> X.isHidden())] check start
      Content[X1] is Active
      [X.isHidden()] false
      [(X1.isActive() -> X.isHidden())] false
    constraint expression[(X1.isActive() -> X.isHidden())] false

Area[X] change hidden
Area[X] displays Content[X1::NORMAL] hidden[true]

Area[Y] check start
  Content[Y1::NORMAL] check online constraints start
  check online constraints to confirm area hidden state
    constraint expression[(X1.hasBeenDisplayed() -> Y.isHidden())] check start
      Content[X1].hasBeenDisplayed() false
      [(X1.hasBeenDisplayed() -> Y.isHidden())] true
    constraint expression[(X1.hasBeenDisplayed() -> Y.isHidden())] true

Area[Y] displays Content[Y1::NORMAL] hidden[false]

----Arbitrate----
Area[A] check start
  Content[A1] is not Active skip
  Content[null] check online constraints start
  check online constraints to confirm area hidden state
Area[A] displays Content[null] hidden[false]

----Cancel Request----
Content[A1::NORMAL] check start
  Content[A1::NORMAL] is not Active skip
Content[X1::NORMAL] check start
  Content[X1::NORMAL] is not Active skip
Content[Y1::NORMAL] check start
  Content[Y1::NORMAL] is Visible skip
----Cancel Request----
Content[A1::NORMAL] check start
  Content[A1::NORMAL] is not Active skip
Content[X1::NORMAL] check start
  check wait of request
  check cancel of request
  Content[X1::NORMAL] is not Canceled because NEVER_GIVEUP
Content[Y1::NORMAL] check start
  Content[Y1::NORMAL] is Visible skip
----Cancel Request----
Content[A1::NORMAL] check start
  Content[A1::NORMAL] is not Active skip
Content[X1::NORMAL] check start
  check wait of request
  check cancel of request
  Content[X1::NORMAL] is not Canceled because NEVER_GIVEUP
Content[Y1::NORMAL] check start
  Content[Y1::NORMAL] is Visible skip
----Check All Constraint----
    constraint expression[(X1.isActive() -> X.isHidden())] check start
      Content[X1] is not Active
      [(X1.isActive() -> X.isHidden())] true
    constraint expression[(X1.isActive() -> X.isHidden())] true

    constraint expression[(X1.hasBeenDisplayed() -> Y.isHidden())] check start
      Content[X1].hasBeenDisplayed() false
      [(X1.hasBeenDisplayed() -> Y.isHidden())] true
    constraint expression[(X1.hasBeenDisplayed() -> Y.isHidden())] true

----Check All Constraint----
    constraint expression[(X1.isActive() -> X.isHidden())] check start
      Content[X1] is Active
      [X.isHidden()] true
      [(X1.isActive() -> X.isHidden())] true
    constraint expression[(X1.isActive() -> X.isHidden())] true

    constraint expression[(X1.hasBeenDisplayed() -> Y.isHidden())] check start
      Content[X1].hasBeenDisplayed() false
      [(X1.hasBeenDisplayed() -> Y.isHidden())] true
    constraint expression[(X1.hasBeenDisplayed() -> Y.isHidden())] true

----Check All Constraint----
    constraint expression[(X1.isActive() -> X.isHidden())] check start
      Content[X1] is Active
      [X.isHidden()] true
      [(X1.isActive() -> X.isHidden())] true
    constraint expression[(X1.isActive() -> X.isHidden())] true

    constraint expression[(X1.hasBeenDisplayed() -> Y.isHidden())] check start
      Content[X1].hasBeenDisplayed() false
      [(X1.hasBeenDisplayed() -> Y.isHidden())] true
    constraint expression[(X1.hasBeenDisplayed() -> Y.isHidden())] true

----Run Rule----
----Run Rule----
----Run Rule----
----Result Information----
Allocatable TotalCount:3
  Area[A] Content[null] hidden[false]
  Area[X] Content[null] hidden[false]
  Area[Y] Content[Y1::NORMAL] hidden[false]
Content TotalCount:3
  ViewContent[A1] visible[false] cancel[false]
  ViewContent[X1] visible[false] cancel[false]
  ViewContent[Y1] visible[true] cancel[false]
    allocated Area[Y]
----Result Information----
Allocatable TotalCount:3
  Area[A] Content[null] hidden[false]
  Area[X] Content[X1::NORMAL] hidden[true]
  Area[Y] Content[Y1::NORMAL] hidden[false]
Content TotalCount:3
  ViewContent[A1] visible[false] cancel[false]
  ViewContent[X1] visible[false] cancel[false]
    allocated Area[X]
  ViewContent[Y1] visible[true] cancel[false]
    allocated Area[Y]
----Result Information----
Allocatable TotalCount:3
  Area[A] Content[null] hidden[false]
  Area[X] Content[X1::NORMAL] hidden[true]
  Area[Y] Content[Y1::NORMAL] hidden[false]
Content TotalCount:3
  ViewContent[A1] visible[false] cancel[false]
  ViewContent[X1] visible[false] cancel[false]
    allocated Area[X]
  ViewContent[Y1] visible[true] cancel[false]
    allocated Area[Y]

