Package Model {
	Constraint a1かb1が出ていないときにスキップされることを確認 {
		description: "scene有効下では優先度の高い方を隠す"
		// scene.isOn()がtrueの場合、a1かb1が要求なしならSKIP。
		// SKIPされないケースは、他のテストケース（StateValue、StateValue_Usecase）があるのでここではやらない
		// scene.isOn()がfalseの場合、常にELSEが実行されるが、これはANDのテストなのでここではやらない。
		runtime: true
		IF (scene.isOn() AND a1.stateValue() > b1.stateValue())
		THEN ! a1.isVisible()
		ELSE ! b1.isVisible()
	}

	Area A {
		arbitrationPolicy: PRIORITY_LAST_COME_FIRST
		visibility: STANDARD_VALUE
		zorder: STANDARD_VALUE sizeReference: size1
	}
	Area B {
		arbitrationPolicy: PRIORITY_LAST_COME_FIRST
		visibility: STANDARD_VALUE
		zorder: STANDARD_VALUE sizeReference: size1
	}

	ViewContent a1 {
		allocatable: [ A ] sizeReference: size1
		State NORMAL { priority: 10 }
	}
	ViewContent b1 {
		allocatable: [ B ] sizeReference: size1
		State NORMAL { priority: 10 }
	}
	Scene scene {}

	Display SampleDisplay {
		Size FullScreen { width: 400 height: 200 }
		CompositeArea SampleCompositeArea {
			layout: FixedPositionLayout {
				PositionContainer { x: 0 y: 0 areaReference: A }
				PositionContainer { x: 200 y: 0 areaReference: B }
			}
		}
	}
	Size size1 { width: 200 height: 200 }

}
