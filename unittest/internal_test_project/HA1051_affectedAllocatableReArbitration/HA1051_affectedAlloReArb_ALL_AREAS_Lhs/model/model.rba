Package SampleDisplays {
	Display Sample_METER{
		Size Sample_METER_FULLSCREEN {
			width: 800
			height: 400
		}
		CompositeArea Sample_METER_Root {
			layout: FixedPositionLayout {
				PositionContainer {
					x:100
					y:100
					basePoint: LEFT_TOP
					areaReference: A
				}
				PositionContainer {
					x:300
					y:0
					basePoint: LEFT_TOP
					areaReference: B
				}
			}
		}
	}
	Size Aサイズ {
		width:300
		height:200
	}
	Size Bサイズ {
		width:200
		height:100
	}
	Area A {
		sizeReference:Aサイズ
		visibility: > That-of B
		zorder: > That-of B
	}
	Area B {
		sizeReference:Bサイズ
		visibility:  > That-of C
		zorder: > That-of C
	}
	Zone C {
		visibility:  > That-of D
	}
	Zone D {
		visibility:  > That-of P
	}
	Zone P {
		visibility: NONE_VALUE
	}
	Zone Q {
		visibility: NONE_VALUE
	}
	Zone R {
		visibility: NONE_VALUE
	}
	ViewContent A1{
		allocatable: [
			A
		]
		State NORMAL {
			priority: STANDARD_VALUE
		}
		sizeReference:Aサイズ
	}
	ViewContent B1 {
		allocatable: [
			B
		]
		State NORMAL {
			priority: STANDARD_VALUE
		}
		sizeReference:Bサイズ
	}
	SoundContent C1 {
		allocatable: [
			C
		]
		State NORMAL {
			priority: STANDARD_VALUE
		}
	}
	SoundContent D1 {
		allocatable: [
			D
		]
		State NORMAL {
			priority: STANDARD_VALUE
		}
	}
	SoundContent P1 {
		allocatable: [
			P
		]
		State NORMAL {
			priority: STANDARD_VALUE
		}
	}
	SoundContent Q1 {
		allocatable: [
			Q
		]
		State NORMAL {
			priority: STANDARD_VALUE
		}
	}
	SoundContent R1 {
		allocatable: [
			R
		]
		State NORMAL {
			priority: STANDARD_VALUE
		}
	}
	Constraint HA1051_影響エリアの再調停テスト_1 {
		runtime: true
		For-All ALL_AREAS{ x|x.isDisplayed() } -> !C.isOutputted() 
	}
	Constraint HA1051_影響エリアの再調停テスト_2 {
		runtime: true
		P.isOutputted() -> !A.isDisplayed()
	}
	Constraint HA1051_影響エリアの再調停テスト_3 {
		runtime: true
		Q.isOutputted() -> !B.isDisplayed()
	}
	Constraint HA1051_影響エリアの再調停テスト_4 {
		runtime: true
		R.isOutputted() -> !A.isDisplayed() AND !B.isDisplayed()
	}
}