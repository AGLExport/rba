Package Displays {
	Display DisplayA{
		sizeReference: DisplayASize
		CompositeArea Default1 {
			layout: FixedPositionLayout {
				PositionContainer {
					x:0
					y:0
					basePoint: LEFT_TOP
					areaReference: AreaA
				}
				PositionContainer {
					x:100
					y:0
					basePoint: LEFT_TOP
					areaReference: AreaB
				}
				PositionContainer {
					x:200
					y:0
					basePoint: LEFT_TOP
					areaReference: AreaC
				}
			}
		}
	}
	Size DisplayASize {width: 1000 height: 1000} 
	Size AreaSize {width: 10 height: 10}
	Area AreaA {
		sizeReference: AreaSize
		visibility: > That-of AreaB
		zorder: STANDARD_VALUE
	}
	Area AreaB {
		sizeReference: AreaSize
		visibility: > That-of AreaC
		zorder: STANDARD_VALUE
	}
	Area AreaC {
		sizeReference: AreaSize
		visibility: MIN_VALUE
		zorder: STANDARD_VALUE
	}
	ViewContent ViewA1{
		allocatable: [
			AreaA
		]
		State NORMAL {
			priority: STANDARD_VALUE
		}
		sizeReference: AreaSize
	}
	ViewContent ViewB1 {
		allocatable: [
			AreaB
		]
		State NORMAL {
			priority: STANDARD_VALUE
		}
		State EXTENDED {
			priority: STANDARD_VALUE + 1
		}
		sizeReference: AreaSize
	}
	ViewContent ViewC1 {
		allocatable: [
			AreaC
		]
		State NORMAL {
			priority: STANDARD_VALUE
		}
		sizeReference: AreaSize
	}
}
Package Outputs {
	Zone ZoneA {
		visibility: > That-of ZoneB
	}
	Zone ZoneB {
		visibility: > That-of ZoneC
	}
	Zone ZoneC {
		visibility: > MIN_VALUE
	}
	SoundContent SoundA1{
		allocatable: [
			ZoneA
		]
		State NORMAL {
			priority: STANDARD_VALUE
		}
	}
	SoundContent SoundB1 {
		allocatable: [
			ZoneB
		]
		State NORMAL {
			priority: STANDARD_VALUE + 1
		}
		State EXTENDED {
			priority: STANDARD_VALUE
		}
	}
	SoundContent SoundC1 {
		allocatable: [
			ZoneC
		]
		State NORMAL {
			priority: STANDARD_VALUE
		}
	}
}