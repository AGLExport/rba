Package Displays {
	Size FullScreen {
		width: 900
		height: 200
	}
	Size エリアAサイズ {
		width: 400
		height: 200
	}
	Size エリアBサイズ {
		width: 200
		height: 200
	}
	Size エリアCサイズ {
		width: 300
		height: 200
	}
	Area エリアA {
		arbitrationPolicy: DEFAULT
		sizeReference: エリアAサイズ
		visibility: > That-of エリアB
		zorder: STANDARD_VALUE
	}
	Area エリアB {
		arbitrationPolicy: DEFAULT
		sizeReference: エリアBサイズ
		visibility: MIN_VALUE
		zorder: STANDARD_VALUE
	}
	Area エリアC {
		arbitrationPolicy: DEFAULT
		sizeReference: エリアCサイズ
		visibility: NONE_VALUE
		zorder: STANDARD_VALUE
	}
	ViewContent コンテンツA1{
		loserType:NEVER_GIVEUP
		sizeReference: エリアAサイズ
		State NORMAL {
			priority: 15
		}
		allocatable: [エリアA]
	}
	ViewContent コンテンツB1{
		loserType:NEVER_GIVEUP
		sizeReference: エリアBサイズ
		State NORMAL {
			priority: 14
		}
		allocatable: [エリアB]
	}
	ViewContent コンテンツC1{
		loserType:NEVER_GIVEUP
		sizeReference: エリアBサイズ
		State NORMAL {
			priority: 13
		}
		allocatable: [エリアC]
	}	ViewContent コンテンツA2{
		loserType:NEVER_GIVEUP
		sizeReference: エリアAサイズ
		State NORMAL {
			priority: 12
		}
		allocatable: [エリアA]
	}
	ViewContent コンテンツB2{
		loserType:NEVER_GIVEUP
		sizeReference: エリアBサイズ
		State NORMAL {
			priority: 11
		}
		allocatable: [エリアB]
	}
	ViewContent コンテンツC2{
		loserType:NEVER_GIVEUP
		sizeReference: エリアCサイズ
		State NORMAL {
			priority: STANDARD_VALUE
		}
		allocatable: [エリアC]
	}
	Display SampleDisplay {
		sizeReference: FullScreen
		CompositeArea SampleCompositeArea {
			layout: FixedPositionLayout {
				PositionContainer {
					x: 0
					y: 0
					basePoint: LEFT_TOP
					areaReference: エリアA
				}
				PositionContainer {
					x: 400
					y: 0
					basePoint: LEFT_TOP
					areaReference: エリアB
				}
				PositionContainer {
					x: 600
					y: 0
					basePoint: LEFT_TOP
					areaReference: エリアC
				}
			}
		}
	}
	Constraint AndOperator {
		runtime: false
		コンテンツA2.isVisible() AND コンテンツB2.isVisible() AND コンテンツC2.isVisible()
	}
}