Package Constraints {
	Constraint PCSの割込時における非表示エリア制約 {
		description: "PCSの割込みメッセージがあるときは、他のエリアを非表示にする"
		runtime: true
		PCS.isVisible() -> For-All その他のエリア { x | x.isHidden() }
	}
	
	Constraint 外気温の重複制約 {
		description: "METに外気温が表示されているならばHUDには表示しない"
		runtime: true
		外気温エリア.isDisplayed() -> HUD_外気温エリア.isHidden()
	}
	

	Constraint HUDオフによるHUD非表示制約 {
		description: "警告音が再生されているならば、音楽再生はミュート"
		runtime: true
		HUDオフシーン.isOn() -> For-All HUD全エリア{x|x.isHidden()}
	}

	PostConstraint インフラ協調を待機させる後処理制約 {
		description: "インフラ協調は、TELに調停負けした場合は待機する"
		インフラ協調.isDefeatedBy(TEL) -> !インフラ協調.isCanceled()
	}

	Constraint 意図しない振舞を検出するオフライン制約 {
		description: "前回非表示のコンテンツが今回表示されて良いかチェックする"
		runtime: false
		For-All ALL_VIEWCONTENTS { x |
			((!(pre)x.isVisible() AND x.isVisible())
				-> (!(pre)x.isActive() OR
					Exists x.allocatables() { a | ((a.displayingContent() == x) AND (
						((pre)a.isDisplayed() AND !(pre)a.displayingContent().isActive()) OR (pre)a.isHidden()
					))}
				)
			)
		}
	}

	Constraint Attenuate {
		runtime: true
		ナビ.isActive() -> フロント.isAttenuated()
	}

	Constraint Mute {
		runtime: true
		警告音.isActive() -> メインスピーカー.isMuted()
	}

	Constraint StopNavi {
		runtime: true
		天気予報.isActive() -> フロント.isMuted()
	}

	Constraint reActivate {
		runtime: true
		(pre)TestContent.isActive() -> !TestContent.isVisible()
	}

	PostConstraint Cancel {
		TEL.isDefeatedBy(PCS) -> TEL.isCanceled()
	}
}
