Package actionsample {
	Size サイズ {
		width:100
		height:100
	}
	
	Area エリアA {
		arbitrationPolicy: PRIORITY_LAST_COME_FIRST
		sizeReference: サイズ
		visibility: = 3
		zorder: = 1
	}
	Area エリアB {
		arbitrationPolicy: PRIORITY_LAST_COME_FIRST
		sizeReference: サイズ
		visibility: = 2
		zorder: = 1
	}
	Area エリアC {
		arbitrationPolicy: PRIORITY_LAST_COME_FIRST
		sizeReference: サイズ
		visibility: = 1
		zorder: = 1
	}

	ViewContent a1 {
		allocatable: [
			エリアA
		]
		State NORMAL {
			priority: STANDARD_VALUE
		}
		sizeReference: サイズ
	}
	
	ViewContent b1 {
		allocatable: [
			エリアB
		]
		State NORMAL {
			priority: STANDARD_VALUE
		}
		sizeReference: サイズ
	}

	ViewContent c1 {
		allocatable: [
			エリアC
		]
		State NORMAL {
			priority: STANDARD_VALUE
		}
		sizeReference: サイズ
	}

	Constraint DispLatestContent {
		runtime: true
		For-All ALL_AREAS {x| 
			For-All ALL_AREAS {y| 
				(x != y) -> (x.allocatedContent().hasComeLaterThan(y.allocatedContent())->y.isHidden())
			}
		}
	}

	Display Sample {
		Size Sample_METER_FULLSCREEN {
			width: 300
			height: 100
		}
		CompositeArea Root {
			layout: FixedPositionLayout {
				PositionContainer {
					x: 0
					y: 0
					basePoint: LEFT_TOP
					areaReference: エリアA
				}
				PositionContainer {
					x: 100
					y: 0
					basePoint: LEFT_TOP
					areaReference: エリアB
				}
				PositionContainer {
					x: 200
					y: 0
					basePoint: LEFT_TOP
					areaReference: エリアC
				}
			}
		}
	}
}
