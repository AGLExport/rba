Package Basic {

	Area AreaA {
		arbitrationPolicy: LAST_COME_FIRST
		sizeReference: SizeCommon
		visibility: NONE_VALUE
		zorder: STANDARD_VALUE
	}
	Area AreaB {
		arbitrationPolicy: LAST_COME_FIRST
		sizeReference: SizeCommon
		visibility: NONE_VALUE
		zorder: STANDARD_VALUE
	}
	Area AreaC {
		arbitrationPolicy: LAST_COME_FIRST
		sizeReference: SizeCommon
		visibility: NONE_VALUE
		zorder: STANDARD_VALUE
	}
	Area AreaD {
		arbitrationPolicy: LAST_COME_FIRST
		sizeReference: SizeCommon
		visibility: NONE_VALUE
		zorder: STANDARD_VALUE
	}
	ViewContent ContentA {
		allocatable: [
			AreaA
		]
		State NORMAL {
			priority: STANDARD_VALUE
		}
		sizeReference: SizeCommon
	}
	ViewContent ContentB {
		allocatable: [
			AreaB
		]
		State NORMAL {
			priority: STANDARD_VALUE
		}
		sizeReference: SizeCommon
	}
	ViewContent ContentC {
		allocatable: [
			AreaC
		]
		State NORMAL {
			priority: STANDARD_VALUE
		}
		sizeReference: SizeCommon
	}
	ViewContent ContentD {
		allocatable: [
			AreaD
		]
		State NORMAL {
			priority: STANDARD_VALUE
		}
		sizeReference: SizeCommon
	}
	Scene SceneA {
		
	}
	
	Size SizeCommon {
		width:100
		height:100
	}
	Display Sample_METER {
		Size Sample_METER_FULLSCREEN {
			width: 400
			height: 100
		}
		CompositeArea Sample_METER_Root {
			layout: FixedPositionLayout {
				PositionContainer {
					x: 0
					y: 0
					basePoint: LEFT_TOP
					areaReference: AreaA
				}
				PositionContainer {
					x: 100
					y: 0
					basePoint: LEFT_TOP
					areaReference: AreaB
				}
				PositionContainer {
					x: 200
					y: 0
					basePoint: LEFT_TOP
					areaReference: AreaC
				}
				PositionContainer {
					x: 300
					y: 0
					basePoint: LEFT_TOP
					areaReference: AreaD
				}

			}
		}
	}
}
