Package Models {
	Size sizeD {
		width: 300
		height: 100
	}
	Size sizeA {
		width: 100
		height: 100
	}
	
	Area A1 {
		arbitrationPolicy: DEFAULT
		sizeReference: sizeA
		visibility: STANDARD_VALUE
		zorder: STANDARD_VALUE
	}
	Area A2 {
		arbitrationPolicy: DEFAULT
		sizeReference: sizeA
		visibility: STANDARD_VALUE
		zorder: STANDARD_VALUE		
	}
	Area A3 {
		arbitrationPolicy: DEFAULT
		sizeReference: sizeA
		visibility: STANDARD_VALUE
		zorder: STANDARD_VALUE		
	}
	
	Display D1 {
		sizeReference: sizeD
		CompositeArea CA1 {
			layout: FixedPositionLayout {
				PositionContainer {
					areaReference: A1
					basePoint: LEFT_TOP
					x: 0
					y: 0
				}
				PositionContainer {
					areaReference: A2
					basePoint: LEFT_TOP
					x: 100
					y: 0
				}
				PositionContainer {
					areaReference: A3
					basePoint: LEFT_TOP
					x: 100
					y: 0
				}
			}
		}
	}
	
	ViewContent C1 {
		allocatable: [A1]
		sizeReference: sizeA
		State normal {
			priority: STANDARD_VALUE
		}
	}
	ViewContent C2 {
		allocatable: [A1]
		sizeReference: sizeA
		State normal {
			priority: STANDARD_VALUE
		}
	}
	ViewContent C3 {
		allocatable: [A1]
		sizeReference: sizeA
		State normal {
			priority: STANDARD_VALUE
		}
	}
	ViewContent C4 {
		allocatable: [A2]
		sizeReference: sizeA
		State normal {
			priority: STANDARD_VALUE
		}
	}
	ViewContent C5 {
		allocatable: [A3]
		sizeReference: sizeA
		State normal {
			priority: STANDARD_VALUE
		}
	}
	
	
	Constraint check_activeContents {
		runtime: true
		For-All A1.activeContents() { x | x.isActive() } -> A2.isHidden()
	}
	Constraint check_pre_activeContents {
		runtime: true
		For-All (pre)A1.activeContents() { x | (pre)x.isActive() } -> A3.isHidden()
	}
}
