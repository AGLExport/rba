Package Models {
	
	Size DisplaySize {
		width: 340
		height: 120
	}
	Size AreaSize {
	width: 100
	height: 100
	}
	
	Display Display1 {
		CompositeArea Root {
			layout: FixedPositionLayout {
				PositionContainer {
					x: 10
					y: 10
					basePoint: LEFT_TOP
					areaReference: Area_A
				}
				PositionContainer {
					x: 120
					y: 10
					basePoint: LEFT_TOP
					areaReference: Area_B
				}								
				PositionContainer {
					x: 230
					y: 10
					basePoint: LEFT_TOP
					areaReference: Area_C
				}								
			}
		}
		sizeReference: DisplaySize
	}

	Area Area_A {
		arbitrationPolicy: LAST_COME_FIRST
		visibility: MAX_VALUE
		zorder: MAX_VALUE
		sizeReference: AreaSize
	}
	
	Area Area_B {
		arbitrationPolicy: LAST_COME_FIRST
		visibility: < That-of Area_A
		zorder: = That-of Area_A
		sizeReference: AreaSize
	}
	
	Area Area_C {
		arbitrationPolicy: LAST_COME_FIRST
		visibility: < That-of Area_B
		zorder: = That-of Area_B
		sizeReference: AreaSize
	}

	Zone Zone_X {
		arbitrationPolicy: LAST_COME_FIRST
		visibility: STANDARD_VALUE
	}

	Zone Zone_Y {
		arbitrationPolicy: LAST_COME_FIRST
		visibility: < That-of Zone_X
	}

	ViewContent a1 {
		allocatable: [Area_A]
		State NORMAL { priority: STANDARD_VALUE }
		sizeReference: AreaSize
	}
		
	ViewContent b1 {
		allocatable: [Area_B]
		State NORMAL { priority: STANDARD_VALUE }
		sizeReference: AreaSize
	}
	
	ViewContent c1 {
		allocatable: [Area_C]
		State NORMAL { priority: STANDARD_VALUE }
		sizeReference: AreaSize
	}
	
	SoundContent x1 {
		allocatable: [Zone_X]
		State NORMAL { priority: STANDARD_VALUE }
	}
	
	SoundContent y1 {
		allocatable: [Zone_Y]
		State NORMAL { priority: STANDARD_VALUE }
	}

	Constraint allocatedContent_left_before {
		runtime: true
		((IF(Area_C.isDisplayed()) THEN Area_A ELSE Area_C).allocatedContent() != a1)
			-> (Area_A.isHidden())
	}
	
	Constraint displayingContent_left_before {
		runtime: true
		((IF(Area_C.isDisplayed()) THEN Area_B ELSE Area_C).displayingContent() != b1)
			-> (Area_B.isHidden())
	}
	
	Constraint outputtingSound_left_before {
		runtime: true
		((IF(Zone_Y.isOutputted()) THEN Zone_X ELSE Zone_Y).outputtingSound() != x1)
			-> (Zone_X.isMuted())
	}
	
	
}
