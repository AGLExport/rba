Package Displays {
	Display DisplayA{
		sizeReference: DisplayASize
		CompositeArea Default1 {
			layout: FixedPositionLayout {
				PositionContainer {
					x:0
					y:0
					basePoint: LEFT_TOP
					areaReference: A
				}
				PositionContainer {
					x:100
					y:0
					basePoint: LEFT_TOP
					areaReference: B
				}
				PositionContainer {
					x:200
					y:0
					basePoint: LEFT_TOP
					areaReference: C
				}
			}
		}
	}
	Size DisplayASize {width: 1000 height: 1000} 
	Size AreaSize {width: 10 height: 10}
	Area A {
		sizeReference: AreaSize
		visibility: > That-of B
		zorder: STANDARD_VALUE
	}
	Area B {
		sizeReference: AreaSize
		visibility: > That-of C
		zorder: STANDARD_VALUE
	}
	Area C {
		sizeReference: AreaSize
		visibility: MIN_VALUE
		zorder: STANDARD_VALUE
	}
	ViewContent A1{
		allocatable: [
			A
		]
		State NORMAL {
			priority: STANDARD_VALUE + 1
		}
		sizeReference: AreaSize
	}
	ViewContent B1 {
		allocatable: [
			B
		]
		State NORMAL {
			priority: STANDARD_VALUE
		}
		sizeReference: AreaSize
	}
	ViewContent C1 {
		allocatable: [
			C
		]
		State NORMAL {
			priority: STANDARD_VALUE
		}
		sizeReference: AreaSize
	}
	Scene S1{
		global: true
		int P1:1
		int P2:2
		int P3:3
	}
	Constraint HA919_Result_SatisfiesConstraints_false {
		runtime: true
		!A1.isActive() OR (A.isDisplayed() AND !A.isDisplayed())
	}
	Constraint HA919_Result_SatisfiesConstraints_true {
		runtime: true
		C.isDisplayed() -> B.isHidden()
	}
}