Package Displays {
	Display SampleDisplay {
		Size FullScreen {
			width: 300
			height: 100
		}
		CompositeArea SampleCompositeArea {
			layout: FixedPositionLayout {
				PositionContainer {
					x: 0
					y: 0
					areaReference: A
				}
				PositionContainer {
					x: 100
					y: 0
					areaReference: B
				}
				PositionContainer {
					x: 200
					y: 0
					areaReference: C
				}
			}
		}
	}

	Size DefaultSize {
		width: 100
		height: 100
	}

	Area A {
		arbitrationPolicy: PRIORITY_LAST_COME_FIRST
		visibility: STANDARD_VALUE
		zorder: STANDARD_VALUE
		sizeReference: DefaultSize
	}

	Area B {
		arbitrationPolicy: PRIORITY_LAST_COME_FIRST
		visibility: STANDARD_VALUE
		zorder: STANDARD_VALUE
		sizeReference: DefaultSize
	}

	Area C {
		arbitrationPolicy: PRIORITY_LAST_COME_FIRST
		visibility: STANDARD_VALUE
		zorder: STANDARD_VALUE
		sizeReference: DefaultSize
	}

    ViewContent A1 {
    	loserType: GOOD_LOSER
    	allocatable:[
    		A
    	]
    	State NORMAL{
    		value: > That-of B1.NORMAL
    	}
    	sizeReference: DefaultSize
    }
    ViewContent B1 {
    	loserType: GOOD_LOSER
    	allocatable:[
    		B
    	]
    	State NORMAL{
    		value: > That-of B2.NORMAL
    	}
    	sizeReference: DefaultSize
    }
    ViewContent B2 {
    	loserType: GOOD_LOSER
    	allocatable:[
    		B
    	]
    	State NORMAL{
    		value: > That-of C1.NORMAL
    	}
    	sizeReference: DefaultSize
    }
    ViewContent C1 {
    	loserType:NEVER_GIVEUP
    	allocatable:[
    		C
    	]
    	State NORMAL{
    		value: MIN_VALUE
    	}
    	sizeReference: DefaultSize
    }
    ViewContentSet ContentSetB {
    	target:[
    		B1, B2
    	]
    }
    Constraint Bに表示するコンテントが今回ONになったらA1は表示しない {
    	runtime:true
    	Exists ContentSetB { x | (A1.isActive() AND !((pre)x.isActive()) AND x.isActive())} -> !A1.isVisible()
    }
    Constraint Aが表示ならB2は非表示 {
    	runtime:true
    	A.isDisplayed() -> !B2.isVisible()
    }
}
