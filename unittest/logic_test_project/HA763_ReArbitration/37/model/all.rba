Package SampleDisplays {
	Display Sample_METER{
		Size Sample_METER_FULLSCREEN {
			width: 500
			height: 400
		}
		CompositeArea Sample_METER_Root {
			layout: FixedPositionLayout {
				PositionContainer {
					x:100
					y:100
					basePoint: LEFT_TOP
					areaReference: A
				}
				PositionContainer {
					x:300
					y:0
					basePoint: LEFT_TOP
					areaReference: B
				}
				PositionContainer {
					x: 50
					y: 250
					basePoint: LEFT_TOP
					areaReference: C
				}
				PositionContainer {
					x: 50
					y: 50
					basePoint: LEFT_TOP
					areaReference: D
				}
				PositionContainer {
					x: 100
					y: 300
					basePoint: LEFT_TOP
					areaReference: E
				}
			}
		}
	}
	Size Aサイズ {
		width:300
		height:200
	}
	Size Bサイズ {
		width:200
		height:100
	}
	Size Cサイズ {
		width:400
		height:100		
	}
	Size Dサイズ {
		width:100
		height:100	
	}
	Size Eサイズ {
		width:300
		height:100
	}
	Area A {
		sizeReference:Aサイズ
		visibility: > That-of B
		zorder: > That-of B
	}
	Area B {
		sizeReference:Bサイズ
		visibility:  > That-of C
		zorder: > That-of C
	}
	Area C {
		sizeReference:Cサイズ
		visibility:  > That-of D
		zorder:  > That-of D
	}
	Area D {
		sizeReference:Dサイズ
		visibility: > That-of E
		zorder: > That-of E
	}
	Area E {
		sizeReference:Eサイズ
		visibility: NONE_VALUE
		zorder: MIN_VALUE
	}
	ViewContent A1{
		allocatable: [
			A
		]
		State NORMAL {
			priority: STANDARD_VALUE
		}
		sizeReference:Aサイズ
	}
	ViewContent B1 {
		allocatable: [
			B
		]
		State NORMAL {
			priority: STANDARD_VALUE
		}
		sizeReference:Bサイズ
	}
	ViewContent C1 {
		allocatable: [
			C
		]
		State NORMAL {
			priority: STANDARD_VALUE
		}
		sizeReference:Cサイズ
	}
	ViewContent D1 {
		allocatable: [
			D
		]
		State NORMAL {
			priority: STANDARD_VALUE
		}
		sizeReference:Dサイズ
	}
	ViewContent E1 {
		allocatable: [
			E
		]
		State NORMAL {
			priority: STANDARD_VALUE
		}
		sizeReference:Eサイズ
	}
	Constraint HA763_構文の組み合わせテスト {
		runtime: true
		IF(E.isDisplayed())
		THEN D.isHidden() OR C.isHidden()
		ELSE B.isHidden() OR A.isHidden()
	}
}