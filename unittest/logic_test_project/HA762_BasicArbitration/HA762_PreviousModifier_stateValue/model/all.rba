Package Displays {
	Display SampleDisplay {
		Size FullScreen {width: 300 height: 200	}
		CompositeArea SampleCompositeArea {
			layout: FixedPositionLayout {
				PositionContainer {	x: 0 y: 0 areaReference: A }
				PositionContainer { x: 100 y: 0 areaReference: B }
			}
		}
	}

	Area A {
		arbitrationPolicy: PRIORITY_LAST_COME_FIRST
		sizeReference: size1
		visibility: > That-of B
		zorder: STANDARD_VALUE
	}
	Area B {
		arbitrationPolicy: PRIORITY_LAST_COME_FIRST
		sizeReference: size1
		visibility: STANDARD_VALUE
		zorder: STANDARD_VALUE
	}

	Size size1 {width: 100 height: 200}

	ViewContent a1{
		allocatable: [A]
		State S1 {priority: MAX_VALUE}
		State S2 {priority: STANDARD_VALUE}
		State S3 {priority: MIN_VALUE}
		sizeReference: size1
	}
	ViewContent a2{
		allocatable: [A]
		State S1 {priority: MAX_VALUE}
		State S2 {priority: STANDARD_VALUE}
		State S3 {priority: MIN_VALUE}
		sizeReference: size1
	}
	ViewContent b1{
		allocatable: [B]
		State S1 {priority: MAX_VALUE}
		State S2 {priority: STANDARD_VALUE}
		State S3 {priority: MIN_VALUE}
		sizeReference: size1
	}

	Constraint BisHidden {
		runtime: true
		!((pre)a1.stateValue() = a1.stateValue()) -> B.isHidden()
	}
}
