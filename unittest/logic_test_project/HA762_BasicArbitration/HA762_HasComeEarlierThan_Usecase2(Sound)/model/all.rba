Package Model {
	Constraint 異なるエリア間で同じ優先度コンテントのうち要求順が遅いほうを隠す_より実際の用途に近い版 {
		runtime: true
		(A.contentValue() = B.contentValue())
			-> IF (B.outputtingSound().hasComeEarlierThan(A.outputtingSound()))
			THEN A.isMuted()
			ELSE B.isMuted()
	}
	Zone A {
		arbitrationPolicy: PRIORITY_LAST_COME_FIRST
		visibility: > That-of B
	}
	Zone B {
		arbitrationPolicy: PRIORITY_LAST_COME_FIRST
		visibility: MIN_VALUE
	}

	SoundContent a1 {
		allocatable: [ A ]
		State NORMAL { priority: 10 }
	}
	SoundContent b1 {
		allocatable: [ B ]
		State NORMAL { priority: 10 }
	}
}
