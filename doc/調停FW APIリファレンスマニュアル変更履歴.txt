■バージョン1.0
 2018/08/22
 ・新規作成
■バージョン1.1
 2018/09/26
 ・調停結果差し替えAPI(非推奨)を追加
	std::unique_ptr<RBAResult> rba::RBAArbitrator::setResultContentState (const std::string & allocatableName, const std::string & contextName)
■バージョン1.2
 2018/10/12
 ・調停結果差し戻し(キャンセル)APIを追加
	std::unique_ptr<RBAResult> rba::RBAArbitrator::cancelArbitration ()
 
【Note】差し戻し(キャンセル)APIについて
調停機にて調停[execute()]を行い結果[RBAResult]を受け取った後に、調停結果を拒否するケースが存在します。
その場合、調停機内の状態を調停前の状態に戻す必要があります。
例：CarPlay
調停結果によりCarPlayアプリ経由でiPhoneに画面表示を要求するがiPhoneが拒否する場合がある、その場合は遷移させずに前画面を維持する。
■バージョン1.3
 2018/12/05
 ・RBAToolで使用するAPIを追加
	void RBAArbitrator::clearArbitration()
	bool RBAArbitrator::setContentState(const std::string& contextName, bool require)
	bool RBAArbitrator::setAllocatableResult(const std::string& allocatableName,
						 const std::string& contextName)
	bool RBAArbitrator::setScene(const std::string& sceneName, bool require,
                		     std::list<std::pair<std::string, std::int32_t>>& properties)
 ・前回の調停結果を取得するAPIを削除
	std::list<RBAArea*>& RBAResult::getPreVisibleAreas()
	std::list<RBAZone*>& RBAResult::getPreSoundingZones()
	std::list<RBAViewContentState*>& RBAResult::getPreVisibleContentStates()
	std::list<RBASoundContentState*>& RBAResult::getPreSoundingContentStates()
	std::list<RBAViewContentState*>& RBAResult::getPreActiveViewContentStates()
	std::list<RBASoundContentState*>& RBAResult::getPreActiveSoundContentStates()
	std::list<RBAScene*>& RBAResult::getPreActiveScenes()
	std::list<RBAArea*>& RBAResult::getPreInvisibleAreas()
	std::list<RBAZone*>& RBAResult::getPreUnsoundingZones()
	std::list<RBAViewContent*>& RBAResult::getPreInvisibleContents()
	std::list<RBASoundContent*>& RBAResult::getPreUnsoundingContents()
	std::list<RBAArea*>& RBAResult::getPreHiddenAreas()
	std::list<RBAZone*>& RBAResult::getPreMuteZones()
	std::list<RBAZone*>& RBAResult::getPreAttenuatedZones()
	std::list<RBAViewContent*>& RBAResult::getPreCanceledViewContents()
	std::list<RBASoundContent*>& RBAResult::getPreCanceledSoundContents()
	std::list<RBAViewContent*>& RBAResult::getPreStandbyViewContents()
	std::list<RBASoundContent*>& RBAResult::getPreStandbySoundContents()
	RBAViewContentState* RBAResult::getPreContentState(RBAArea* area)
	RBASoundContentState* RBAResult::getPreContentState(RBAZone* zone)
	RBAArea* RBAResult::getPreArea(RBAViewContentState* state)
	RBAZone* RBAResult::getPreZone(RBASoundContentState* state)
	RBAArea* RBAResult::getPreArea(RBAViewContent* content)
	RBAZone* RBAResult::getPreZone(RBASoundContent* content)
	RBASize* RBAResult::getPreSize(RBAArea* area)
	RBAViewContentState* RBAResult::getPreViewContentState(RBAArea* area)
	RBASoundContentState* RBAResult::getPreSoundContentState(RBAZone* zone)
 ・不要な説明文を削除
	std::unique_ptr<RBAResult> RBAArbitrator::execute(const std::string& contextName="",
							  bool require=true);
 ・不要なAPIを削除
	RBAAnimationManager* getAnimationManager()
 ・コンテントステートのオーダーの説明を追加
	std::int32_t RBASoundContentState::getOrder()
	std::int32_t RBAViewContentState::getOrder()
 2018/12/06
 ・使用方法の説明を追加
	std::unique_ptr<RBAResult> RBAArbitrator::execute(const std::string& sceneName,
                        std::list<std::pair<std::string,std::int32_t>>& properties);
	bool RBAArbitrator::setContentState(const std::string& contextName, bool require)
	bool RBAArbitrator::setScene(const std::string& sceneName, bool require,
                		     std::list<std::pair<std::string, std::int32_t>>& properties)
■バージョン1.4
 2019/01/14
 ・以下のrba::RBAResultクラスの公開メンバ関数の戻り値をリストに変更
	virtual std::list< RBAArea * > getArea (RBAViewContentState *state)=0
	virtual std::list< RBAZone * > getZone (RBASoundContentState *state)=0
	virtual std::list< RBAArea * > getArea (RBAViewContent *content)=0
	virtual std::list< RBAZone * > getZone (RBASoundContent *content)=0
【Note】
1つのコンテントが同時に複数のアロケータブルに割り当てられる場合があるので、
取得できる値をリストにした。
 ・関数に関する補足説明を"覚え書き"に移動
 	void RBAArbitrator::clearArbitration()
	bool RBAArbitrator::setAllocatableResult(const std::string& allocatableName,
						 const std::string& contextName)
 ・関数に関する補足説明を"覚え書き"として追加
	std::unique_ptr<RBAResult> RBAArbitrator::execute(const std::string& sceneName,
                        std::list<std::pair<std::string,std::int32_t>>& properties);
	bool RBAArbitrator::setScene(const std::string& sceneName, bool require,
                		     std::list<std::pair<std::string, std::int32_t>>& properties)
 ・調停ポリシータイプクラスを追加
	RBAArbitrationPolicy
 ・調停ポリシーを取得するAPIを追加
	RBAArbitrationPolicy RBAArea::getArbitrationPolicy();
	RBAArbitrationPolicy RBAZone::getArbitrationPolicy();
■バージョン1.5
 2019/02/13
 ・以下のAPIを引数の型を変更
    RBAResult.hpp
     isActive(RBAViewContentState* state)をisActive(RBAViewContent*)に変更
     isActive(RBASoundContentState* state)をisActive(RBASoundContent*)に変更
 ・以下のAPIを追加
    RBAResult.hpp
     virtual bool satisfiesConstraints() const=0;
     virtual std::int32_t getSceneProperty(const RBAScene* scene, const std::string& propertyName) const=0;
 ・以下のAPIを名前を変更追加
    RBAScene.hpp
     getGlobal()をisGlobal()に変更
 ・以下のクラスを削除
    RBAConstraintList
    RBAPositionContainerList
    RBAPostConstraintList
 ・各クラスのメンバ関数のうち、 get, find など情報を取得するのが目的のものをconst とした。
   RBAArbitrator.hpp
    const RBAModel* getModel() const;
   RBAArea.hpp
    virtual std::string getName() const=0;
    virtual std::int32_t getX() const=0;
    virtual std::int32_t getY() const=0;
    virtual std::int32_t getZorder() const=0;
    virtual const std::list<const RBAViewContent*>& getContents() const=0;
    virtual const std::list<const RBASize*>& getSizes() const=0
    virtual RBAArbitrationPolicy getArbitrationPolicy() const=0;
   RBADisplay.hpp
    virtual std::string getName() const=0;
    virtual const RBASize* getSize() const=0;
    virtual const std::list<const RBAArea*>& getAreas() const=0;
   RBAModel.hpp
    virtual const RBAViewContent* findViewContent(const std::string& contName) const=0;
    virtual const RBAArea* findArea(const std::string& areaName) const=0;
    virtual const RBAViewContentState* findViewContentState(const std::string& stateName) const=0;
    virtual const RBASize* findSize(const std::string& sizeName) const=0;
    virtual const RBAZone* findZone(const std::string& zoneName) const=0;
    virtual const RBASoundContent* findSoundContent(const std::string& contName) const=0;
    virtual const RBASoundContentState* findSoundContentState(const std::string& stateName) const=0;
    virtual const RBAScene* findScene(const std::string& sceneName) const=0;
    virtual const RBADisplay* findDisplay(const std::string& displayName) const=0;
    virtual const std::list<const RBAArea*>& getAreas() const=0;
    virtual const std::list<const RBAViewContent*>& getViewContents() const=0;
    virtual const std::list<const RBAViewContentState*>& getViewContentStates() const=0;
    virtual const std::list<const RBASize*>& getSizes() const=0;
    virtual const std::list<const RBAZone*>& getZones() const=0;
    virtual const std::list<const RBASoundContent*>& getSoundContents() const=0;
    virtual const std::list<const RBASoundContentState*>& getSoundContentStates() const=0;
    virtual const std::list<const RBAScene*>& getScenes() const=0;
    virtual const std::list<const RBADisplay*>& getDisplays() const=0;
   RBAResult.hpp
    virtual const std::list<const RBAArea*>& getVisibleAreas() const=0;
    virtual const std::list<const RBAZone*>& getSoundingZones() const=0;
    virtual const std::list<const RBAViewContentState*>& getVisibleContentStates() const=0;
    virtual const std::list<const RBASoundContentState*>& getSoundingContentStates() const=0;
    virtual const std::list<const RBAViewContentState*>& getActiveViewContentStates() const=0;
    virtual const std::list<const RBASoundContentState*>& getActiveSoundContentStates() const=0;
    virtual const std::list<const RBAScene*>& getActiveScenes() const=0;
    virtual const std::list<const RBAArea*>& getInvisibleAreas() const=0;
    virtual const std::list<const RBAZone*>& getUnsoundingZones() const=0;
    virtual const std::list<const RBAArea*>& getHiddenAreas() const=0;
    virtual const std::list<const RBAZone*>& getMuteZones() const=0;
    virtual const std::list<const RBAZone*>& getAttenuatedZones() const=0;
    virtual const std::list<const RBAViewContent*>& getCanceledViewContents() const=0;
    virtual const std::list<const RBASoundContent*>& getCanceledSoundContents() const=0;
    virtual const std::list<const RBAViewContent*>& getStandbyViewContents() const=0;
    virtual const std::list<const RBASoundContent*>& getStandbySoundContents() const=0;
    virtual const RBAViewContentState* getContentState(const RBAArea* area) const=0;
    virtual const RBASoundContentState* getContentState(const RBAZone* zone) const=0;
    virtual const std::list<const RBAArea*> getArea(const RBAViewContentState* state) const=0;
    virtual const std::list<const RBAZone*> getZone(const RBASoundContentState* state) const=0;
    virtual const std::list<const RBAArea*> getArea(const RBAViewContent* content)const=0;
    virtual const std::list<const RBAZone*> getZone(const RBASoundContent* content) const=0;
    virtual const RBASize* getSize(const RBAArea* area) const=0;
    virtual bool isActive(const RBAScene* scene) const=0;
    virtual bool isVisible(const RBAArea* area) const=0;
    virtual bool isSounding(const RBAZone* zone) const=0;
    virtual bool isVisible(const RBAViewContentState* state) const=0;
    virtual bool isSounding(const RBASoundContentState* state) const=0;
    virtual const RBAViewContentState* getViewContentState(const RBAArea* area) const=0;
    virtual const RBASoundContentState* getSoundContentState(const RBAZone* zone) const=0;
    virtual bool isHidden(const RBAArea* area) const=0;
    virtual bool isMute(const RBAZone* zone) const=0;
    virtual bool isAttenuated(const RBAZone* zone) const=0;
    virtual bool isCancel(const RBAViewContentState* state) const=0;
    virtual bool isCancel(const RBASoundContentState* state) const=0;
    virtual const std::list<std::unique_ptr<RBAViewAction>>& getViewActions() const=0;
    virtual RBAResultStatusType getStatusType() const=0;
   RBAScene.hpp
    virtual std::string getName() const=0;
    virtual const std::list<const std::string>& getPropertyNames() const=0;
    virtual std::int32_t getPropertyValue(const std::string& propertyName) const=0;
   RBASize.hpp
    virtual std::string getName() const=0;
    virtual std::int32_t getWidth() const=0;
    virtual std::int32_t getHeight() const=0;
   RBASoundContent.hpp
    virtual std::string getName() const=0;
    virtual const std::list<const RBASoundContentState*>& getContentStates() const=0;
    virtual const std::list<const RBAZone*>& getZones() const=0;
    virtual RBAContentLoserType getLoserType() const=0;
   RBASoundContentState.hpp
    virtual std::string getName() const=0;
    virtual std::int32_t getPriority() const=0;
    virtual const RBASoundContent* getOwner() const=0;
    virtual std::int32_t getOrder() const=0;
    virtual std::string getUniqueName() const=0;
   RBAViewAction.hpp
    virtual const RBAArea* getArea() const;
    virtual const RBAViewContent* getFromContent() const;
    virtual const RBAViewContent* getToContent() const;
    virtual const RBAViewContentState* getFromContentState() const;
    virtual const RBAViewContentState* getToContentState() const;
    virtual const RBAArea* getFromArea() const;
    virtual const RBAArea* getToArea() const;
    virtual const RBAViewContent* getContent() const;
    virtual const RBAViewContentState* getContentState() const;
    virtual RBAViewActionType getViewActionType() const=0;
   RBAViewContent.hpp
    virtual std::string getName() const=0;
    virtual const std::list<const RBAViewContentState*>& getContentStates() const=0;
    virtual const std::list<const RBAArea*>& getAreas() const=0;
    virtual const std::list<const RBASize*>& getSizes() const=0;
    virtual RBAContentLoserType getLoserType() const=0;
   RBAViewContentState.hpp
    virtual std::string getName() const=0;
    virtual std::int32_t getPriority() const=0;
    virtual const RBAViewContent* getOwner() const=0;
    virtual std::int32_t getOrder() const=0;
    virtual std::string getUniqueName() const=0;
   RBAZone.hpp
    virtual std::string getName() const=0;
    virtual std::int32_t getPriority() const=0;
    virtual const std::list<const RBASoundContent*>& getContents() const=0;
    virtual RBAArbitrationPolicy getArbitrationPolicy() const=0;
 ・以下のAPIを削除
    RBAModel virtual std::list<RBAAreaSet*>& getAreaSets();
    RBAModel virtual std::list<RBAViewContentSet*>& getViewContentSets();
    RBAModel virtual RBAPositionContainerList& getPositionContainers();
    RBAModel virtual RBAConstraintList& getConstraints();
    RBAModel virtual RBAPostConstraintList& getPostConstraints();
    RBAJsonParser RBAExpression* parseExpression(const std::string& expr_jsonstring);
    RBAResult virtual std::list<RBAViewContent*>& getInvisibleContents();
    RBAResult virtual std::list<RBASoundContent*>& getUnsoundingContents();
    RBAResult virtual std::string getLog();
 ・以下のクラスのAPIの説明を全面的に見直し
    RBAArbitrator
    RBAResult
■バージョン1.6
 2019/02/14
 ・RBAModel.hppでの不要なインクルードファイルを削除
 ・RBABasePoint.hppを削除
 ・以下の関数の戻り値の型を変更
   RBAScene.hpp
    virtual const std::list<std::string>& getPropertyNames() const=0;
■バージョン1.7
 2019/02/20
 ・以下の関数の戻り値の型を変更
   RBAResult.hpp
    変更前：virtual const std::list< std::unique_ptr< RBAViewAction > > & getViewActions () const =0
    変更後：virtual const std::list<const RBAViewAction*>& getViewActions() const=0;
    変更理由：unique_ptrのconst std::listを作ることができないため。また、unique_ptrでは使用性も悪いので通常のポインタのリストに変更。
